@using Microsoft.AspNetCore.Identity
@using it_shop_app.Areas.Identity.Data

@inject SignInManager<IdentityNutzer> SignInManager
@inject UserManager<IdentityNutzer> UserManager

@if (SignInManager.IsSignedIn(User)) 
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hallo @UserManager.GetUserName(User)!</a>
    </li>
}
<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-user-alt"></i></a>
    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
        @if (SignInManager.IsSignedIn(User)) {
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profil</a>
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        } else {
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Anmelden</a>
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registrieren</a>
        }
    </div>
</li>
