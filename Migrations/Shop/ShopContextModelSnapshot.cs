// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using it_shop_app.Data;

namespace it_shop_app.Migrations.Shop
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1");

            modelBuilder.Entity("it_shop_app.Models.Artikel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschreibung")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preis")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ID");

                    b.ToTable("Artikel");
                });

            modelBuilder.Entity("it_shop_app.Models.ArtikelBestellungen", b =>
                {
                    b.Property<int>("Artikel_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bestellung_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Artikel_ID", "Bestellung_ID");

                    b.HasIndex("Bestellung_ID");

                    b.ToTable("ArtikelBestellungen");
                });

            modelBuilder.Entity("it_shop_app.Models.Bestellung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Bestelldatum")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Gesamtpreis")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Nutzer_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("Nutzer_ID");

                    b.ToTable("Bestellungen");
                });

            modelBuilder.Entity("it_shop_app.Models.Liste", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nutzer_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("bezeichnung")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Nutzer_ID");

                    b.ToTable("Listen");
                });

            modelBuilder.Entity("it_shop_app.Models.ListenArtikel", b =>
                {
                    b.Property<int>("Liste_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Artikel_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Liste_ID", "Artikel_ID");

                    b.HasIndex("Artikel_ID");

                    b.ToTable("ListenArtikel");
                });

            modelBuilder.Entity("it_shop_app.Models.Merkmal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Artikel_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wert")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Artikel_ID");

                    b.ToTable("Merkmale");
                });

            modelBuilder.Entity("it_shop_app.Models.Nutzer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Geburtsdatum")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hausnummer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nachname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ort")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plz")
                        .HasColumnType("TEXT");

                    b.Property<string>("Straße")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Nutzer");
                });

            modelBuilder.Entity("it_shop_app.Models.Warenkorb", b =>
                {
                    b.Property<int>("Nutzer_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Artikel_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Nutzer_ID", "Artikel_ID");

                    b.HasIndex("Artikel_ID");

                    b.ToTable("Warenkorb");
                });

            modelBuilder.Entity("it_shop_app.Models.ArtikelBestellungen", b =>
                {
                    b.HasOne("it_shop_app.Models.Artikel", "Artikel")
                        .WithMany("ArtikelBestellungen")
                        .HasForeignKey("Artikel_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("it_shop_app.Models.Bestellung", "Bestellung")
                        .WithMany("ArtikelBestellungen")
                        .HasForeignKey("Bestellung_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("it_shop_app.Models.Bestellung", b =>
                {
                    b.HasOne("it_shop_app.Models.Nutzer", "Kaeufer")
                        .WithMany("Bestellungen")
                        .HasForeignKey("Nutzer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("it_shop_app.Models.Liste", b =>
                {
                    b.HasOne("it_shop_app.Models.Nutzer", "Nutzer")
                        .WithMany("Listen")
                        .HasForeignKey("Nutzer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("it_shop_app.Models.ListenArtikel", b =>
                {
                    b.HasOne("it_shop_app.Models.Artikel", "Artikel")
                        .WithMany("ListenArtikel")
                        .HasForeignKey("Artikel_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("it_shop_app.Models.Liste", "Liste")
                        .WithMany("ListenArtikel")
                        .HasForeignKey("Liste_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("it_shop_app.Models.Merkmal", b =>
                {
                    b.HasOne("it_shop_app.Models.Artikel", "Artikel")
                        .WithMany("Merkmale")
                        .HasForeignKey("Artikel_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("it_shop_app.Models.Warenkorb", b =>
                {
                    b.HasOne("it_shop_app.Models.Artikel", "Artikel")
                        .WithMany("Warenkorb")
                        .HasForeignKey("Artikel_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("it_shop_app.Models.Nutzer", "Nutzer")
                        .WithMany("Warenkorb")
                        .HasForeignKey("Nutzer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
